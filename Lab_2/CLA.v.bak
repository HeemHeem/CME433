module CLA( 
	input wire [3:0] p, g,
	input wire cin,
	output wire [3:0] cout,
	output wire G, P
);

// P logic
assign P = p[0] & p[1] & p[2] & p[3];

// G logic
assign G = g[3] | (g[2] & p[3]) | (g[1] & p[3] & p[2]) | (g[0] & p[3] & p[2] & p[1]);

// cout logic
assign cout[0] = g[0] | (p[0] & cin);
assign cout[1] = g[1] | (g[0] & p[1]) | (p[1] & p[0] & cin);
assign cout[2] = g[2] | (g[1] & p[2]) | (g[0] & p[1] & p[2]) | (p[2] & p[1] & p[0] & cin);
assign cout[3] = g[3] | (g[2] & p[3]) | (g[1] & p[2] & p[3]) | (g[0] & p[1] & p[2] & p[3]) | (p[3] & p[2] & p[1] & p[0] & cin);

 


endmodule
